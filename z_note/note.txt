Day 15
#LARAVEL
Teknologi framework yang mengadopsi metode MVC (MODEL, VIEW, CONTROLLER)
* Model = Representasi dari Table pada database (Entity)
* View = Resource yang digunakan untuk menampilkan halaman pada website (frontend)
* Controller = Base atau Otak atau Terminal atau Si Pengatur dari semua bisnis logic pada aplikasi kita
* Route = Configurasi untuk mengatur alamat pada setiap request di aplikasi
* ENV = Secret file yang berguna untuk mengatur environment variable (settingan database)
* Composer.json = Berfungsi untuk sebagai package manager untuk penggunaan library terkait project laravel kita


#GIT
Tools untuk menyimpan semua code base kita
* git init . = berfungsi untuk menginisiasi project kita (firs time) / initial
warna hijau menandakan file/folder baru

* git add . = untuk menambahkan list file pada project ke staging git

* git commit -m "pesan - instalation laravel"  = untuk finalisasi perubahan secara fix

* membuat repo baru

* git push = untuk mengupload code ke git (github, gitlab, bitbucket)
    1. git push origin main/master

- branch = untuk memisahkan code kita dengan yang lainnya(2 atau lebih colaborator)
    * ada 2 kolaborator
    * default git MAIN, akan digunakan untuk sumber ke server
    * colaborator 1 = create & use branch JONI
    * colaborator 2 = create & use branch ANDI


Note Day17
1.flow clonning
    - git clone {url}
    - composer install
    - cp .env.example .env
    - php artisan key:generate
    - php artisan serve

    - git branch tedy
    - git checkout tedy

2. Flow Hello World
    1. Controller
        - app/Http/Controllers
        - php artisan make:controller HelloController = Command laravel untuk membuat controller
        - bikin/siapin function di HelloController nya untuk ke route (ex: index())
        - setelah dari routes/web.php buat return 
            - return view('hello.index');

    2. Routing
        - routes/web.php
        - buat routingan 
            - buat routing jika ada yang mengakses misal baseurl/hello-world
            - Route::get('/hello-world', [HelloController::class, 'index']);
            - pastikan ada use App\Http\Controllers\HelloController;
            - dimana index itu function yang sudah di buat di HelloController



    3. View
        - resource/views
        - buat folder di views contoh folder dengan nama hello
        - buat file view di folder hello
            - index.blade.php
            - isi dengan html contoh

Day18 

Day19
    1. @yield('mainComponen') = Patokan atau tempat penampung untuk component yang akan di implementasi
    2. @section('mainComponent') = sebagai component yang akan di implementasikan  pada main base template
    3. @extend('alamat base layout/template') = sebagai import base template 
        - @extend('blog.layout.main')

    